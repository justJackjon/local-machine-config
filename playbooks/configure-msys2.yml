# NOTE: This playbook requires Ansible to be run locally on a Windows machine. 
# To use Ansible on Windows, the easiest way is to have MSYS2 already installed (so this is a chicken and egg scenario, sorry!). 
# Therefore, before running this playbook, you either need to manually install MSYS2 and Ansible, or, run the prep_win_environment.ps1 script.
#
# IMPORTANT: If you would like to automate the steps below to set up your windows localhost environment,
# you can run the <REPOSITORY_ROOT>/scripts/prep_win_environment.ps1 script from an **elevated** PowerShell.
#
# If you want to do this manually, here are the steps:
# a) Install Chocolatey by running the following command in PowerShell as an administrator:
#    # SEE: https://chocolatey.org/install
#    Set-ExecutionPolicy Bypass -Scope Process -Force;
#    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
#    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
# b) Install MSYS2 using Chocolatey by running the following command in PowerShell as an administrator:
#    choco install msys2
# c) Open MSYS2 terminal and install Ansible by running the following commands:
#    pacman -Syu
#    pacman -S ansible
# d) Run this playbook in MSYS2 to ensure everything is set up correctly and configured.
#    You may have to locate the executable. Depending upon the method of installation you can try /c/msys64 or /c/tools.
#    Alternatively, you can try the following command: `find /c -name "mingw64.exe" -print -quit 2>/dev/null`.

- name: Configure MSYS2 on Windows
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:
    - name: Check if playbook is run with administrative privileges
      when: ansible_env.OS == 'Windows_NT'
      block:
        - name: Attempt to create a file in a system directory
          file:
            path: "C:/Windows/Temp/test"
            state: touch
          register: admin_check
          ignore_errors: true

        - name: Fail if playbook is not run with administrative privileges
          fail:
            msg: "This playbook must be run with administrative privileges. Please re-run the playbook as an administrator."
          when: admin_check.failed

    - name: Configure MSYS2
      when: ansible_env.OS == 'Windows_NT'
      block:
        - name: 'Update nsswitch.conf file to configure home (`~`) to be the Windows user directory'
          lineinfile:
            path: '/etc/nsswitch.conf'
            line: 'db_home: windows'

        - name: Update mingw64.ini file to inherit the full Windows PATH
          lineinfile:
            path: '/mingw64.ini'
            regexp: '^#MSYS2_PATH_TYPE=inherit'
            line: 'MSYS2_PATH_TYPE=inherit'

    - name: Set up local configuration files if none are present
      when: ansible_env.OS == 'Windows_NT'
      block:
        - name: Check if .bash_profile exists
          stat:
            path: '/c/Users/{{ ansible_user_id }}/.bash_profile'
          register: bash_profile_exists

        - name: Create .bash_profile
          when: not bash_profile_exists.stat.exists
          copy:
            content: |
              if [ -f ~/.bashrc ]; then
                source ~/.bashrc
              fi
            dest: '/c/Users/{{ ansible_user_id }}/.bash_profile'

        - name: Check if .bashrc exists
          stat:
            path: '/c/Users/{{ ansible_user_id }}/.bashrc'
          register: bashrc_exists

        - name: Create .bashrc
          when: not bashrc_exists.stat.exists
          copy:
            content: ''
            dest: '/c/Users/{{ ansible_user_id }}/.bashrc'

    - name: Install Caskaydia Cove Nerd Font
      when: ansible_env.OS == 'Windows_NT'
      block:
        # NOTE: Choco isn't in our PATH yet, so we require the full path to the executable.
        - name: Check for choco executable in typical path
          stat:
            path: '/c/ProgramData/chocolatey/bin/choco.exe'
          register: choco_stat

        - name: Fail if choco is not found
          fail:
            msg: "Chocolatey executable not found at /c/ProgramData/chocolatey/bin/choco.exe. Please ensure Chocolatey is installed."
          when: not choco_stat.stat.exists

        - name: Use chocolatey to install Caskaydia Cove Nerd Font
          shell: '/c/ProgramData/chocolatey/bin/choco.exe install cascadia-code-nerd-font -y'
          when: choco_stat.stat.exists

        - name: Ensure .minttyrc file exists
          file:
            path: '/c/Users/{{ ansible_user_id }}/.minttyrc'
            state: touch

        - name: Update .minttyrc to use Nerd Font
          lineinfile:
            path: '/c/Users/{{ ansible_user_id }}/.minttyrc'
            regexp: '^Font='
            line: 'Font=CaskaydiaCove Nerd Font'

    - name: Install and Configure Starship
      when: ansible_env.OS == 'Windows_NT'
      block:
        - name: Install Starship via pacman
          pacman:
            name: mingw-w64-x86_64-starship
            state: present

        - name: Configure Starship for use with bash
          lineinfile:
            path: '/c/Users/{{ ansible_user_id }}/.bashrc'
            line: 'eval "$(starship init bash)"'

    - name: Install Dracula Theme and Configure MINTTY
      when: ansible_env.OS == 'Windows_NT'
      tags: dracula_theme
      block:
        - name: Check if Dracula theme is installed
          stat:
            path: '/usr/share/mintty/themes/dracula'
          register: dracula_installed

        - name: Download Dracula theme for MINTTY
          when: not dracula_installed.stat.exists
          get_url:
            # NOTE: Potentially brittle, and whilst we could use git, we don't really expect any changes to the remote.
            url: https://raw.githubusercontent.com/dracula/mintty/master/dracula.minttyrc
            dest: '/usr/share/mintty/themes/dracula'

        - name: Ensure .minttyrc file exists
          file:
            path: '/c/Users/{{ ansible_user_id }}/.minttyrc'
            state: touch

        - name: Update .minttyrc to use Dracula theme
          lineinfile:
            path: '/c/Users/{{ ansible_user_id }}/.minttyrc'
            regexp: '^ThemeFile='
            line: 'ThemeFile=dracula'
