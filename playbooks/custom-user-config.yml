- name: Install custom user configuration
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:
    - name: "Configure Keyboard: Create ~/.Xmodmap with custom key mappings"
      copy:
        content: |
          keycode 11 = 2 at
          keycode 12 = 3 sterling numbersign
          keycode 48 = apostrophe quotedbl
          keycode 49 = section plusminus
          keycode 51 = backslash bar
          keycode 94 = grave asciitilde
          keycode 108 = Mode_switch Mode_switch Mode_switch Mode_switch
        dest: "/home/{{ ansible_user_id }}/.Xmodmap"
        mode: 0644
      when: 
        - ansible_facts.env.LANGUAGE == 'en_GB:en'
        - ansible_facts.system_vendor == 'GOOGLE'
        - ansible_facts.os_family == 'Debian'
      register: xmodmap_copy_result

    - name: "Configure Keyboard: Apply custom key mappings with xmodmap"
      shell:
        cmd: xmodmap /home/{{ ansible_user_id }}/.Xmodmap
      when: xmodmap_copy_result.changed

    - name: "Install Kinto.sh: Install Kinto dependencies"
      apt:
        name: gir1.2-vte-2.91
        state: present
      become: true

    - name: "Install Kinto.sh: Create a temporary directory for the Kinto install script"
      tempfile:
        state: directory
        suffix: _install_kinto
      register: tempdir

    - name: "Install Kinto.sh: Download Kinto install script"
      get_url:
        url: https://raw.githubusercontent.com/rbreaves/kinto/HEAD/install/linux.sh
        dest: "{{ tempdir.path }}/install_kinto.sh"
        mode: 0755

    - name: "Install Kinto.sh: Run Kinto install script"
      shell: "{{ tempdir.path }}/install_kinto.sh"
      args:
        executable: /bin/bash

    - name: "Configure Kinto.sh: Uncomment XFCE4 specific lines in Kinto.py when current desktop is XFCE4"
      replace:
        path: "/home/{{ ansible_user_id }}/.config/kinto/kinto.py"
        regexp: '^(\s*)([#\s]+)(.*\s(?!not-)xfce4[\s\w]*)$'
        replace: '\1\3'
        backup: yes
      when: ansible_facts['env']['XDG_CURRENT_DESKTOP'] == 'XFCE'

    - name: "Configure Kinto.sh: Modify general GUI related shortcuts for en_GB Chromebook keyboard layouts in kinto.py"
      blockinfile:
        path: "/home/{{ ansible_user_id }}/.config/kinto/kinto.py"
        block: |
          # Map 'Left Alt + 3' to 'Right Alt + 3' to produce the numbersign (#) symbol:
          # NOTE: For general GUIs, Kinto swaps 'Left Ctrl' and 'Left Alt' around on Chromebooks, so this needs to be accounted for in any 'General GUI' keyboard remaps.
          # NOTE: Kinto also swaps the 'Right Alt' and 'Right Ctrl' keys around to reflect the, 'Spacebar -> Command -> Option', layout for UK Macs.
          # NOTE: In a Mac layout, 'Option + 3' produces the numbersign. Since the option key is the second physical key left of the spacebbar, we will replicate the same.
          K("LAlt-KEY_3"): K("RAlt-KEY_3"),
        marker: "# {mark}: ANSIBLE MANAGED GENERAL GUI SHORTCUTS"
        insertbefore: '\s*\},\s*\"General GUI\"\s*'
      when: 
        - ansible_facts.env.LANGUAGE == 'en_GB:en'
        - ansible_facts.system_vendor == 'GOOGLE'
        - ansible_facts.os_family == 'Debian'

    - name: "Configure Kinto.sh: Modify terminal related shortcuts for en_GB Chromebook keyboard layouts in kinto.py"
      blockinfile:
        path: "/home/{{ ansible_user_id }}/.config/kinto/kinto.py"
        block: |
          # Map 'Left Ctrl + 3' to 'Right Alt + 3' to produce the numbersign (#) symbol:
          # NOTE: Kinto swaps the 'Right Alt' and 'Right Ctrl' keys around to reflect the, 'Spacebar -> Command -> Option', layout for UK Macs.
          # NOTE: In a Mac layout, 'Option + 3' produces the numbersign. Since the option key is the second physical key left of the spacebbar, we will replicate the same.
          K("LC-KEY_3"): K("RAlt-KEY_3"),
        marker: "# {mark}: ANSIBLE MANAGED TERMINAL SHORTCUTS"
        insertbefore: '\s*\},\s*\"terminals\"\s*'
      when: 
        - ansible_facts.env.LANGUAGE == 'en_GB:en'
        - ansible_facts.system_vendor == 'GOOGLE'
        - ansible_facts.os_family == 'Debian'

    - name: "Configure Kinto.sh: Restart xkeysnail service after making changes to kinto.py"
      systemd:
        name: xkeysnail
        state: restarted
      become: true

    - name: "Cleanup Kinto.sh: Remove files downloaded by Kinto install script"
      file:
        path: "/home/{{ ansible_user_id }}/Downloads/{{ item }}"
        state: absent
      loop:
        - kinto-master
        - kinto.zip
      become: true

    - name: "Configure XFCE: Set custom Kinto compatible keyboard shortcuts in XFCE"
      command:
        cmd: "{{ item }}"
      with_items:
        - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Primary>Tab" --create --type string --set "cycle_windows_key"
        - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Primary><Shift>Tab" --create --type string --set "cycle_reverse_windows_key"
      when: ansible_facts['env']['XDG_CURRENT_DESKTOP'] == 'XFCE'
