- name: "Install + Configure SpaceVim"
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:
    - name: Set is_windows fact
      set_fact:
        is_windows: "{{ ansible_env.OS is defined and ansible_env.OS == 'Windows_NT' }}"

    - name: Set OS specific facts
      when: is_windows
      set_fact:
        minttyrc_file: >-
          {{ "/c/Users/" + ansible_user_id + "/.minttyrc" 
          if is_windows 
          else "~/.minttyrc" }}

    - name: Set general facts
      set_fact:
        spacevim_config_dir: >-
          {{ "/c/Users/" + ansible_user_id + "/.SpaceVim.d" 
          if is_windows 
          else "~/.SpaceVim.d" }}

    - name: Install SpaceVim
      block:
        - name: Check if MSYS2 is installed on Windows
          when: is_windows
          stat:
            path: "{{ item }}"
          loop:
            - '/c/msys64/mingw64.exe'
            - '/c/tools/msys64/mingw64.exe'
          register: msys2_check

        - name: Fail if MSYS2 is not installed on Windows
          when:
            - is_windows
            - msys2_check.results | selectattr('stat.exists', 'equalto', false) | list | length == msys2_check.results | length
          fail:
            msg: "MSYS2 is not installed. Please install MSYS2 before running this playbook."

        - name: Install SpaceVim
          shell: curl -sLf https://spacevim.org/install.sh | bash
          args:
            creates: "{{ spacevim_config_dir }}"

    - name: Install Nerd Font
      block:
        - name: Install Nerd Font on Windows 
          when: is_windows
          block:
            - name: Check if Chocolatey is installed
              win_shell: choco -v
              register: choco_check
              ignore_errors: yes

            - name: Fail if Chocolatey is not installed
              fail:
                msg: "Chocolatey is not installed. Please install Chocolatey first."
              when: choco_check.rc != 0

            - name: Install Nerd Font (Windows)
              shell: choco install cascadia-code-nerd-font -y

        - name: Install Nerd Font on MacOS
          when: ansible_os_family == 'Darwin'
          block:
            - name: Check if Homebrew is installed
              command: brew -v
              register: brew_check
              ignore_errors: yes

            - name: Fail if Homebrew is not installed
              fail:
                msg: "Homebrew is not installed. Please install Homebrew first."
              when: brew_check.rc != 0

            - name: Install Nerd Font (MacOS)
              homebrew_cask:
                name: font-caskaydia-cove-nerd-font
                state: present

        - name: Install Nerd Font on Debian
          when: ansible_os_family == "Debian"
          block:
            - name: Install dependencies
              become: true
              apt:
                name:
                  - curl
                  - fonts-powerline
                  - tar
                state: present

            - name: Install CaskaydiaCove Nerd Font
              check_mode: false
              get_url:
                url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/CascadiaCode.tar.xz

                dest: "/tmp/CascadiaCode.tar.gz"
              register: download

            - name: Unarchive font
              when: download.changed
              unarchive:
                src: "/tmp/CascadiaCode.tar.gz"
                dest: "~/.local/share/fonts/"
                remote_src: yes

            - name: Update font cache
              when: download.changed
              command: fc-cache -fv
              args:
                warn: false

    - name: Configure MINTTY to use Nerd Font on Windows
      when: is_windows
      block:
        - name: Ensure .minttyrc file exists
          file:
            path: "{{ minttyrc_file }}"
            state: touch

        - name: Update .minttyrc to use Nerd Font
          lineinfile:
            path: "{{ minttyrc_file }}"
            regexp: '^Font='
            line: 'Font=CaskaydiaCove Nerd Font'

    - name: Configure SpaceVim
      block:
        - name: 'Ensure .SpaceVim.d directory exists'
          file:
            path: "{{ spacevim_config_dir }}"
            state: directory

        - name: Ensure init.toml file exists
          file:
            path: "{{ spacevim_config_dir }}/init.toml"
            state: touch

        - name: Add custom_plugins header to SpaceVim configuration
          lineinfile:
            path: "{{ spacevim_config_dir }}/init.toml"
            line: "[[custom_plugins]]"

        - name: Add Dracula plugin to SpaceVim
          blockinfile:
            path: "{{ spacevim_config_dir }}/init.toml"
            insertafter: '^\[\[custom_plugins\]\]$'
            block: |
              repo = "dracula/vim"
              name = "dracula"
              merged = false
            marker: "# {mark}: ANSIBLE MANAGED CUSTOM PLUGINS"

        - name: Add options header to SpaceVim configuration
          lineinfile:
            path: "{{ spacevim_config_dir }}/init.toml"
            line: "[options]"

        - name: Configure Dracula theme for SpaceVim
          blockinfile:
            path: "{{ spacevim_config_dir }}/init.toml"
            insertafter: '^\[options\]$'
            block: |
              # Sets the SpaceVim theme. By default the colorscheme layer is not loaded,
              # if you want to use more colorschemes, load the colorscheme layer.
              colorscheme = "dracula"
              colorscheme_bg = "dark"
              # NOTE: Disable guicolors in basic mode, many terminals do not support 24bit true colors.
              enable_guicolors = true
              statusline_separator = "arrow"
              statusline_iseparator = "arrow"
              buffer_index_type = 4
              enable_tabline_filetype_icon = true
              enable_statusline_mode = false
            marker: "# {mark}: ANSIBLE MANAGED OPTIONS"
