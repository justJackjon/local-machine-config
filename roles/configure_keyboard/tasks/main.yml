# NOTE: The logic of this role was not changed when it was converted from a playbook.
# There is extensive refactoring required to make it OS agnostic, however, this was out of scope for the conversion work.
- name: Configure Keyboard
  block:
    - name: Set OS and hardware facts
      set_fact:
        is_debian_os_on_gb_chromebook: >
          {{
            ansible_facts.os_family == 'Debian' and
            ansible_facts.env.LANGUAGE == 'en_GB:en' and
            ansible_facts.system_vendor == 'GOOGLE'
          }}
        is_xfce_desktop: >
          {{
            ansible_facts.env.XDG_CURRENT_DESKTOP is defined and
            ansible_facts.env.XDG_CURRENT_DESKTOP == 'XFCE'
          }}

    - name: Apply Custom Keyboard Mappings for Debian based systems on Chromebook hardware
      when: is_debian_os_on_gb_chromebook
      block:
        - name: Create ~/.Xmodmap with custom key mappings
          copy:
            content: |
              keycode 11 = 2 at
              keycode 12 = 3 sterling numbersign
              keycode 48 = apostrophe quotedbl
              keycode 49 = section plusminus
              keycode 51 = backslash bar
              keycode 94 = grave asciitilde
              keycode 108 = Mode_switch Mode_switch Mode_switch Mode_switch
            dest: "/home/{{ ansible_user_id }}/.Xmodmap"
            mode: 0644
          register: xmodmap_copy_result

        - name: Apply custom key mappings with xmodmap
          when: xmodmap_copy_result.changed
          shell:
            cmd: xmodmap /home/{{ ansible_user_id }}/.Xmodmap

    - name: Configure General Keyboard Shortcuts 
      block:
        - name: Set custom Kinto compatible keyboard shortcuts in XFCE
          when: is_xfce_desktop
          command:
            cmd: "{{ item }}"
          with_items:
            - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Primary>Tab" --create --type string --set "cycle_windows_key"
            - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/xfwm4/custom/<Primary><Shift>Tab" --create --type string --set "cycle_reverse_windows_key"
            - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/commands/custom/<Super>l" --reset
            - xfconf-query --channel=xfce4-keyboard-shortcuts --property "/commands/custom/<Primary><Alt>q" --create --type string --set "xflock4"

    - name: Configure Workspace Switching Shortcuts 
      block:
        - name: Configure XFCE workspace shortcuts
          when: is_xfce_desktop
          block:
            - name: Ensure there are 10 workspaces
              command: xfconf-query -c xfwm4 -p /general/workspace_count -s 10

            - name: Set deletion script permissions
              file:
                path: "{{ role_path }}/files/{{ xfce4_shortcut_deletion_script_path }}"
                mode: '0744'

            - name: Execute XFCE4 workspace switching shortcut deletion script
              command: "{{ role_path }}/files/{{ xfce4_shortcut_deletion_script_path }}"

            - name: Set creation script permissions
              file:
                path: "{{ role_path }}/files/{{ xfce4_shortcut_deletion_script_path }}"
                mode: '0744'

            - name: Execute XFCE4 workspace switching shortcut creation script
              command: "{{ role_path }}/files/{{ xfce4_shortcut_creation_script_path }}"

        - name: Configure MacOS workspace shortcuts
          when: is_mac
          block:
            - name: Set creation script permissions
              file:
                path: "{{ role_path }}/files/{{ macos_shortcut_creation_script_path }}"
                mode: '0744'

            - name: Execute MacOS workspace switching shortcut creation script
              # NOTE: Requires bash 4 or higher to provide support for associative arrays.
              # Because the `shell` module runs `sh` by default unless it is symlinked to
              # `/bin/bash`, the `command` module is used instead to spawn a bash shell.
              command: "bash {{ role_path }}/files/{{ macos_shortcut_creation_script_path }}"

    - name: Install Kinto.sh 
      tags: kinto_install
      block:
        - name: Install Kinto.sh on Linux
          when: ansible_facts.system == 'Linux'
          block:
            - name: Install Kinto dependencies
              when: ansible_facts.pkg_mgr == 'apt'
              apt:
                name: gir1.2-vte-2.91
                state: present
              become: true

            - name: Create a temporary directory for the Kinto install script
              tempfile:
                state: directory
                suffix: _install_kinto
              register: tempdir

            - name: Download Kinto install script
              get_url:
                url: https://raw.githubusercontent.com/rbreaves/kinto/HEAD/install/linux.sh
                dest: "{{ tempdir.path }}/install_kinto.sh"
                mode: 0755
              register: kinto_download_result

            - name: Run Kinto install script
              when: kinto_download_result is success
              shell: "{{ tempdir.path }}/install_kinto.sh"
              args:
                executable: /bin/bash
              register: kinto_install_result

    - name: Clean-up Kinto.sh Install 
      block:
        - name: Remove files downloaded by Kinto install script
          when: kinto_install_result is changed
          file:
            path: "/home/{{ ansible_user_id }}/Downloads/{{ item }}"
            state: absent
          loop:
            - kinto-master
            - kinto.zip
          become: true

    - name: Configure Kinto.sh 
      tags: kinto_config
      block:
        - name: Uncomment XFCE4 specific lines in Kinto.py when current desktop is XFCE4
          when: is_xfce_desktop
          replace:
            path: "{{ kinto_config_path }}"
            regexp: '^(\s*)([#\s]+)(.*\s(?!not-)xfce4[\s\w]*)$'
            replace: '\1\3'
            backup: true
          register: xfce_changes

        - name: Modify shortcuts for en_GB Chromebook keyboard layouts in kinto.py
          when: is_debian_os_on_gb_chromebook
          block:
            - name: Modify general GUI related shortcuts
              blockinfile:
                path: "{{ kinto_config_path }}"
                block: "{{ lookup('file', 'snippets/kinto/gui_shortcuts') }}"
                marker: "# {mark}: ANSIBLE MANAGED GENERAL GUI SHORTCUTS"
                insertbefore: '\s*\},\s*\"General GUI\"\s*'
              register: gui_changes

            - name: Modify terminal related shortcuts
              blockinfile:
                path: "{{ kinto_config_path }}"
                block: "{{ lookup('file', 'snippets/kinto/terminal_shortcuts') }}"
                marker: "# {mark}: ANSIBLE MANAGED TERMINAL SHORTCUTS"
                insertbefore: '\s*\},\s*\"terminals\"\s*'
              register: terminal_changes

        - name: Restart xkeysnail service after making changes to kinto.py
          when: xfce_changes.changed or gui_changes.changed or terminal_changes.changed
          systemd:
            name: xkeysnail
            state: restarted
          register: kinto_config_result
          become: true

    - name: Manage Kinto Backup Files
      block:
        - name: Retain latest backup file only
          when: kinto_config_result is changed
          block:
            - name: Get list of backup files
              when: ansible_facts.system == "Linux"
              set_fact:
                backup_files: "{{ lookup('fileglob', kinto_config_path ~ '.*', wantlist=true) }}"

            - name: Extract timestamps from backup filenames
              set_fact:
                backup_files_with_ts: "{{ backup_files | map('regex_replace', '.*\\.(.*)~', '\\1') | list }}"

            - name: Sort backup files by extracted timestamps
              set_fact:
                backup_files_sorted: "{{ backup_files | zip(backup_files_with_ts) | sort(attribute='1') | map(attribute='0') | list }}"

            - name: Remove older backup files whilst retaining the latest backup
              when: backup_files_sorted is defined and backup_files_sorted|length > 1
              file:
                path: "{{ item }}"
                state: absent
              loop: "{{ backup_files_sorted[:-1] }}"
