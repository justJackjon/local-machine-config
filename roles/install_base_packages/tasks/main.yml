- name: Install base packages
  block:
    - name: Install required packages for Debian based systems
      when: is_debian_family
      become: true
      ansible.builtin.apt:
        name:
          - python3-pip
          - bash-completion
          - stow
          - gnupg
          - xclip
          - tldr
          - tree
          - alacritty
        state: present
        update_cache: true

    - name: Install gh for Debian based systems
      when: is_debian_family
      become: true
      block:
        - name: Ensure wget is installed
          ansible.builtin.apt:
            name: wget
            state: present
            update_cache: true

        - name: Create /etc/apt/keyrings directory
          ansible.builtin.file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

        - name: Download GitHub CLI GPG key
          ansible.builtin.get_url:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            dest: /tmp/githubcli-archive-keyring.gpg
            mode: '0644'

        - name: Add GitHub CLI GPG key to apt keyrings
          ansible.builtin.shell: set -o pipefail && cat /tmp/githubcli-archive-keyring.gpg | tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null
          args:
            creates: /etc/apt/keyrings/githubcli-archive-keyring.gpg
          changed_when: false

        - name: Set permissions for GitHub CLI GPG key
          ansible.builtin.file:
            path: /etc/apt/keyrings/githubcli-archive-keyring.gpg
            mode: '0644'

        - name: Add GitHub CLI apt repository
          ansible.builtin.apt_repository:
            repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
            state: present
            filename: github-cli

        - name: Install gh
          ansible.builtin.apt:
            name: gh
            state: present
            update_cache: true

    - name: Install ansible-lint via pipx for Debian based systems
      when: is_debian_family
      ansible.builtin.command: pipx install --force ansible-lint
      args:
        creates: "{{ ansible_env.HOME }}/.local/bin/ansible-lint"

    - name: Install required packages for macOS
      when: is_mac
      block:
        - name: Check if Homebrew is installed
          ansible.builtin.command: which brew
          register: install_base_packages_homebrew_check
          failed_when: install_base_packages_homebrew_check.stdout == ''
          changed_when: false

        - name: Fail if Homebrew is not installed
          when: install_base_packages_homebrew_check.stdout == ''
          ansible.builtin.fail:
            msg: 'Homebrew is not installed. Please install it first.'

        - name: Install Homebrew packages
          community.general.homebrew:
            name:
              - bash
              - bash-completion
              - python3
              - stow
              - pnpm
              - ansible-lint
              - gh
              - gnupg
              - tldr
              - tree
              - alacritty
            state: present
            update_homebrew: true

    - name: Install nvm, node and pnpm
      block:
        - name: Download nvm install script
          when: is_debian_family or is_mac
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
            dest: /tmp/install_nvm.sh
            mode: '0755'

        - name: Run nvm install script
          when: is_debian_family or is_mac
          ansible.builtin.command: /tmp/install_nvm.sh
          args:
            creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

        - name: Install Node.js LTS for Debian and macOS
          when: is_debian_family or is_mac
          ansible.builtin.shell: set -o pipefail && source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install --lts
          args:
            executable: /bin/bash
            creates: "{{ ansible_env.HOME }}/.nvm/versions/node"

        - name: Check if pnpm is installed on Debian
          when: is_debian_family
          ansible.builtin.stat:
            path: "{{ ansible_env.HOME }}/.local/share/pnpm/pnpm"
          register: install_base_packages_pnpm_stat_debian

        - name: Download pnpm install script
          when: is_debian_family and not install_base_packages_pnpm_stat_debian.stat.exists
          ansible.builtin.get_url:
            url: https://get.pnpm.io/install.sh
            dest: /tmp/install_pnpm.sh
            mode: '0755'

        - name: Run pnpm install script
          when: is_debian_family and not install_base_packages_pnpm_stat_debian.stat.exists
          ansible.builtin.command: sh /tmp/install_pnpm.sh
          changed_when: false

        - name: Update pnpm on Debian based systems
          when: is_debian_family and install_base_packages_pnpm_stat_debian.stat.exists
          ansible.builtin.shell:
            cmd: "{{ ansible_env.HOME }}/.local/share/pnpm/pnpm self-update"
          args:
            executable: /bin/bash
            chdir: "{{ ansible_env.HOME }}"
          changed_when: false

    - name: Install required packages for Windows with MSYS2
      when: is_windows
      community.general.pacman:
        name:
          - mingw-w64-x86_64-python
          - mingw-w64-x86_64-python-pip
          - mingw-w64-x86_64-python-setuptools
          - bash-completion
          - stow
          - xclip
          - tldr
          - tree
        state: present
        update_cache: true

    - name: Install nvm and Node.js on Windows
      when: is_windows
      block:
        - name: Install nvm-windows
          chocolatey.chocolatey.win_chocolatey:
            name: nvm
            state: present
        - name: Install gh on Windows
          chocolatey.chocolatey.win_chocolatey:
            name: gh
            state: present
        - name: Install gnupg on Windows
          chocolatey.chocolatey.win_chocolatey:
            name: gnupg
            state: present
        - name: Install Alacritty on Windows
          chocolatey.chocolatey.win_chocolatey:
            name: alacritty
            state: present
        - name: Install Node.js LTS
          ansible.windows.win_shell: nvm install lts
          changed_when: false

    - name: Increase the number of open files limit
      become: true
      ansible.builtin.blockinfile:
        path: /etc/security/limits.conf
        block: |
          # Increased for development environment
          {{ ansible_user_id }} soft nofile 65536
          {{ ansible_user_id }} hard nofile 65536
        marker: "# {mark} ANSIBLE MANAGED BLOCK for nofile limit"
        mode: '0644'

    - name: Install pnpm on Windows
      when: is_windows and not pnpm_stat_windows.stat.exists
      ansible.windows.win_shell: iwr https://get.pnpm.io/install.ps1 -useb | iex
      changed_when: false

    - name: Update pnpm on Windows
      when: is_windows and pnpm_stat_windows.stat.exists
      ansible.windows.win_shell: "{{ ansible_env.LOCALAPPDATA }}\\pnpm\\pnpm.exe self-update"
      args:
        chdir: '{{ ansible_env.USERPROFILE }}'
      changed_when: false
